options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Create a Cloud Storage bucket for uploads if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        gsutil ls -b gs://baic-uploads || gsutil mb -l us-central1 gs://baic-uploads
        gsutil iam ch allUsers:objectViewer gs://baic-uploads

  # Build and deploy GeoIP service to Cloud Run
  # First, update the app.js file to use the PORT environment variable
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        cd beiqi-geoip/beiqi-geoip
        # Update the port to use the PORT environment variable
        sed -i 's/const port = 3000;/const port = process.env.PORT || 3000;  \/\/ Use PORT environment variable for Cloud Run or default to 3000 for local development/g' app.js
        
  # Build and deploy the updated GeoIP service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/beiqi-geoip', './beiqi-geoip/beiqi-geoip']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/beiqi-geoip']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', 'beiqi-geoip', '--image', 'gcr.io/$PROJECT_ID/beiqi-geoip', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']

images:
  - 'gcr.io/$PROJECT_ID/beiqi-geoip'

timeout: 1800s
