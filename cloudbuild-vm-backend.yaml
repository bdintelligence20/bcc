options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Create a Cloud Storage bucket for uploads if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        gsutil ls -b gs://baic-uploads || gsutil mb -l us-central1 gs://baic-uploads
        gsutil iam ch allUsers:objectViewer gs://baic-uploads

  # Copy uploads directory to Cloud Storage
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        if [ -d "./uploadPath" ]; then
          gsutil -m cp -r ./uploadPath/* gs://baic-uploads/
          echo "Uploads directory copied to Cloud Storage from ./uploadPath"
        elif [ -d "./beiqi-service-master/beiqi-service-master/uploadPath" ]; then
          gsutil -m cp -r ./beiqi-service-master/beiqi-service-master/uploadPath/* gs://baic-uploads/
          echo "Uploads directory copied to Cloud Storage from ./beiqi-service-master/beiqi-service-master/uploadPath"
        else
          echo "Uploads directory not found, skipping copy"
        fi

  # Update configuration files
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        cd beiqi-service-master/beiqi-service-master
        
        # Update the database connection in application-prod.yml for admin
        sed -i 's|jdbc:mysql:///ruoyi?cloudSqlInstance=.*&useSSL=false|jdbc:mysql:///ruoyi?cloudSqlInstance=baic-457613:us-central1:baic-mysql\&socketFactory=com.google.cloud.sql.mysql.SocketFactory\&user=ruoyi\&password=Stellies21!@\&useSSL=false|g' ruoyi-admin/src/main/resources/application-prod.yml
        
        # Update the file upload path to use Cloud Storage for admin
        if grep -q "profile:" ruoyi-admin/src/main/resources/application-prod.yml; then
          sed -i 's|profile:.*|profile: /opt/baic/uploads|g' ruoyi-admin/src/main/resources/application-prod.yml
        else
          echo "ruoyi:" >> ruoyi-admin/src/main/resources/application-prod.yml
          echo "  profile: /opt/baic/uploads" >> ruoyi-admin/src/main/resources/application-prod.yml
        fi
        
        if grep -q "local-storage-path:" ruoyi-admin/src/main/resources/application-prod.yml; then
          sed -i 's|local-storage-path:.*|local-storage-path: /opt/baic/uploads|g' ruoyi-admin/src/main/resources/application-prod.yml
        else
          echo "ufo:" >> ruoyi-admin/src/main/resources/application-prod.yml
          echo "  local-storage-path: /opt/baic/uploads" >> ruoyi-admin/src/main/resources/application-prod.yml
        fi
        
        # Update the database connection in application-prod.yml for web
        sed -i 's|jdbc:mysql:///ruoyi?cloudSqlInstance=.*&useSSL=false|jdbc:mysql:///ruoyi?cloudSqlInstance=baic-457613:us-central1:baic-mysql\&socketFactory=com.google.cloud.sql.mysql.SocketFactory\&user=ruoyi\&password=Stellies21!@\&useSSL=false|g' ruoyi-web/src/main/resources/application-prod.yml
        
        # Update the file upload path to use Cloud Storage for web
        if grep -q "profile:" ruoyi-web/src/main/resources/application-prod.yml; then
          sed -i 's|profile:.*|profile: /opt/baic/uploads|g' ruoyi-web/src/main/resources/application-prod.yml
        else
          echo "ruoyi:" >> ruoyi-web/src/main/resources/application-prod.yml
          echo "  profile: /opt/baic/uploads" >> ruoyi-web/src/main/resources/application-prod.yml
        fi
        
        if grep -q "local-storage-path:" ruoyi-web/src/main/resources/application-prod.yml; then
          sed -i 's|local-storage-path:.*|local-storage-path: /opt/baic/uploads|g' ruoyi-web/src/main/resources/application-prod.yml
        else
          echo "ufo:" >> ruoyi-web/src/main/resources/application-prod.yml
          echo "  local-storage-path: /opt/baic/uploads" >> ruoyi-web/src/main/resources/application-prod.yml
        fi

  # Build the Java projects with Maven
  - name: 'maven:3.8-openjdk-8'
    entrypoint: bash
    args:
      - '-c'
      - |
        cd beiqi-service-master/beiqi-service-master
        # Build both modules
        mvn clean package -DskipTests

  # Make the deployment script executable and set up SSH
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        chmod +x vm-deploy.sh
        
        # Ensure SSH directory exists
        mkdir -p ~/.ssh
        
        # Generate SSH key if it doesn't exist
        if [ ! -f ~/.ssh/google_compute_engine ]; then
          ssh-keygen -t rsa -f ~/.ssh/google_compute_engine -N "" -q
        fi
        
        # Add SSH key to project metadata
        EXISTING_KEYS=$(gcloud compute project-info describe --format="value(commonInstanceMetadata.items.filter(key:ssh-keys).firstof(value))")
        NEW_KEY=$(cat ~/.ssh/google_compute_engine.pub)
        echo "${EXISTING_KEYS}" > /tmp/ssh-keys
        echo "${NEW_KEY}" >> /tmp/ssh-keys
        gcloud compute project-info add-metadata --metadata-from-file=ssh-keys=/tmp/ssh-keys
        
  # Deploy to VM with increased timeout
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Wait for SSH key propagation
        echo "Waiting for SSH key propagation..."
        sleep 30
        
        # Run deployment script
        ./vm-deploy.sh
    timeout: 1800s  # 30 minutes

timeout: 7200s  # 2 hours
