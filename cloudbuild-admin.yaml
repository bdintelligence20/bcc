options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Create a Cloud Storage bucket for uploads if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        gsutil ls -b gs://baic-uploads || gsutil mb -l us-central1 gs://baic-uploads
        gsutil iam ch allUsers:objectViewer gs://baic-uploads

  # Build Admin Panel
  - name: 'node:20'
    entrypoint: bash
    args:
      - '-c'
      - |
        cd beiqi-web-master/beiqi-web-master
        
        # Update the .env.production file with relative URLs to avoid mixed content issues
        echo "port = '80'" > .env.production
        echo "# 生产环境配置" >> .env.production
        echo "ENV = 'production'" >> .env.production
        echo "" >> .env.production
        echo "# 接口路径 - Using relative URL to avoid mixed content issues" >> .env.production
        echo "VUE_APP_BASE_API = '/api'" >> .env.production
        echo "" >> .env.production
        echo "# 文件路径" >> .env.production
        echo "VUE_APP_FILE_UOLOAD_HOST = '/file'" >> .env.production
        echo "" >> .env.production
        echo "# 页面标题" >> .env.production
        echo "VUE_APP_TITLE = 北汽官网后台管理系统" >> .env.production
        echo "" >> .env.production
        echo "#门户地址" >> .env.production
        echo "VUE_APP_WEB_HOST = 'http://localhost'" >> .env.production
        
        npm install
        npm run build:prod
        
  # Set up SSH for Cloud Build
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Set up SSH for Cloud Build
        mkdir -p /root/.ssh
        ssh-keygen -t rsa -f /root/.ssh/google_compute_engine -N "" -q
        
        # Add the SSH key to the VM's metadata
        gcloud compute instances add-metadata baic-backend-vm --zone=us-central1-a --metadata="ssh-keys=cloudbuild:$(cat /root/.ssh/google_compute_engine.pub)"
        
        # Configure SSH to not check host keys
        cat > /root/.ssh/config << EOF
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
        EOF
        chmod 600 /root/.ssh/config
        
        # Wait for SSH key propagation
        sleep 30
        
  # Deploy to VM
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Create admin directory on VM
        gcloud compute ssh cloudbuild@baic-backend-vm --zone=us-central1-a --command="sudo mkdir -p /var/www/admin"
        
        # Copy the built files to the VM
        cd beiqi-web-master/beiqi-web-master/dist
        tar -czf /tmp/admin-dist.tar.gz .
        gcloud compute scp /tmp/admin-dist.tar.gz cloudbuild@baic-backend-vm:/tmp/ --zone=us-central1-a
        
        # Extract files on the VM and set up
        gcloud compute ssh cloudbuild@baic-backend-vm --zone=us-central1-a --command="sudo tar -xzf /tmp/admin-dist.tar.gz -C /var/www/admin && sudo chown -R www-data:www-data /var/www/admin"
        
        # Create Nginx configuration for admin panel
        gcloud compute ssh cloudbuild@baic-backend-vm --zone=us-central1-a --command="sudo bash -c 'cat > /etc/nginx/sites-available/admin << EOF
        server {
            listen 80;
            server_name admin.*;
            
            root /var/www/admin;
            index index.html;
            
            location / {
                try_files \\\$uri \\\$uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://localhost:8080/api/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade \\\$http_upgrade;
                proxy_set_header Connection \"upgrade\";
                proxy_set_header Host \\\$host;
                proxy_cache_bypass \\\$http_upgrade;
            }
        }
        EOF'"
        
        # Enable the site
        gcloud compute ssh cloudbuild@baic-backend-vm --zone=us-central1-a --command="sudo ln -sf /etc/nginx/sites-available/admin /etc/nginx/sites-enabled/"
        
        # Restart Nginx
        gcloud compute ssh cloudbuild@baic-backend-vm --zone=us-central1-a --command="sudo nginx -t && sudo systemctl restart nginx"

timeout: 1800s
